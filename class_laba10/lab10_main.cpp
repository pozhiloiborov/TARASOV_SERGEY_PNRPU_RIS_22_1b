//1.	Создать пользовательский класс с минимальной функциональностью.
//2.	Написать функцию для создания объектов пользовательского класса(ввод исходной информации с клавиатуры) и сохранения их в потоке(файле).
//3.	Написать функцию для чтения и просмотра объектов из потока.
//4.	Написать функцию для удаления объектов из потока в соответствии с заданием варианта.Для выполнения задания выполнить перегрузку необходимых операций.
//5.	Написать функцию для добавления объектов в поток в соответствии с заданием варианта.Для выполнения задания выполнить перегрузку необходимых операций.
//6.	Написать функцию для изменения объектов в потоке в соответствии с заданием варианта.Для выполнения задания выполнить перегрузку необходимых операций.
//7.	Для вызова функций в основной программе предусмотреть меню.

//Создать класс Time для работы с временными интервалами.Интервал должен быть представлен в виде двух полей : минуты типа int и секунды типа int.при выводе минуты отделяются от секунд двоеточием.Реализовать :
//		сложение временных интервалов(учесть, что в минуте не может быть более 60 секунд)
//		сравнение временных интервалов(== )
//
//	Задание :
//	•	Удалить все записи равные заданному значению.
//	•	Увеличить все записи с заданным значением на 1 минуту 30 секунд.
//	•	Добавить K записей после элемента с заданным номером

#include "time.h"
#include "file_work.h"
#include <iostream>
#include <fstream>
#include <iostream>
using namespace std;
void main()
{
	setlocale(LC_ALL, "Russian");
	Time p, p1, p2; int k, c;
	char file_name[30]; do
	{	//Меню
		cout << "\n1. Make file";
		cout << "\n2. Print file";
		cout << "\n3. Удалить все записи равные заданному значению.";
		cout << "\n4. Добавить K записей после элемента с заданным номером";
		cout << "\n5. Увеличить все записи с заданным значением на 1 минуту 30 секунд.";
		cout << "\n0. Exit\n";
		cin >> c;
		switch (c)
		{
		case 1:
			cout << "file name?";
			cin >> file_name;
			k = make_file(file_name);
			if (k < 0)cout << "Can't make file";
			break;
		case 2:
			cout << "file name?";
			cin >> file_name;
			k = print_file(file_name);
			if (k == 0)cout << "Empty file\n";
			if (k < 0)cout << "Can't read file\n";
			break;
		case 3:
			cout << "file name?";
			cin >> file_name;
			int nom;
			cin >> p1;
			k = del_file(file_name, p1);
			if (k < 0)cout << "Can't read file"; 
			break;
		case 4:
			cout << "file name?";
			cin >> file_name;
			cout << " Введите номер после которого нужно вставить элементы ";
			cin >> k;
			cout << " Введите кол-во для добавления ";
			cin >> nom;
			k = add_file(file_name, nom,k);
			if (k == -1) cout << "Can't read file";
			if (k == -2) cout << " Элемента с таким номером нет. ";
			break;
		case 5:
			cout << "file name?";
			cin >> file_name;
			cout << "Введите заданное значение ";
			cin >> p2;
			k = change_file(file_name,p2);
			if (k < 0) cout << "\nCan't read file";
			if (k == 0) cout << "\nNot such record";
			break;
		}
	} while (c != 0);



}